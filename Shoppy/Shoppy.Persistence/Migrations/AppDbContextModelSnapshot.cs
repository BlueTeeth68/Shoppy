// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shoppy.Persistence;

#nullable disable

namespace Shoppy.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppUserIdentityRole<Guid>", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppUserId", "IdentityRoleId");

                    b.HasIndex("IdentityRoleId");

                    b.ToTable("AppUserIdentityRole<Guid>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3"),
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = new Guid("5fc71af5-0216-402b-a5cb-ba17701e2fa3"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("85d8a27f-9d32-4269-b5d0-844589d498d0"),
                            RoleId = new Guid("5fc71af5-0216-402b-a5cb-ba17701e2fa3")
                        },
                        new
                        {
                            UserId = new Guid("021657c8-d4d0-4167-a1a6-b7bb840f33bf"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2c96fabb-f759-43ef-9a31-328c25d2eff5"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("30a4345d-df2e-46ab-8c0e-d38a7933b591"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("594f8fe1-1cf1-4f5a-a8ae-6b9509fbf283"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("eee6e626-9a26-4f38-bbe3-433d20440ce9"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("7db124bd-9953-4eb0-98f2-50b1be635544"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d183"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d184"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("8c3b46b9-1321-4d97-a193-5fa49234d185"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2d3d5b2d-b5a3-4b89-84b3-5fa49234d186"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("b6123f4e-3443-41ae-a1cb-5fa49234d187"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("5c6a5f5e-3a11-4d42-bff8-5fa49234d188"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("4a8b3d09-78f2-43ad-bce6-5fa49234d189"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("31e7a1a6-9a5d-4b4e-84eb-5fa49234d190"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("d0e03a1a-21c2-4123-a75e-5fa49234d191"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("0cd66cfc-5d48-4f5e-b22d-5fa49234d192"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("60b9f0cc-b3b4-4ac3-a9ce-5fa49234d193"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("6c16a235-f928-4b8d-978f-5fa49234d194"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("9a4a34a4-4b12-4c8e-a52b-5fa49234d195"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("35d6cf06-f0ef-47a6-a4bd-5fa49234d196"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("eeed5a4d-e83d-4032-8c3c-5fa49234d197"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2b844c01-c89e-4d24-a5d8-5fa49234d198"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("56b2a1c9-a651-4fee-8f8e-5fa49234d199"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("3d77db7b-3b3e-4a38-a1d1-5fa49234d200"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("c0a7e4f4-d8d0-4c80-8e1c-5fa49234d201"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("1d2b5cf5-0ad7-4c3a-b4b9-5fa49234d202"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("9d36fef6-9c75-4f96-a951-5fa49234d203"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("5aca3775-d37e-473c-8f3a-3926ed32e360"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("e92c6f32-859b-443b-bfb2-bd0674b5673a"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2c44d375-c725-4279-b2d3-87ea4218f385"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("906f192a-96d3-433a-a7ea-288662b5f62d"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("c55cdfd0-d1dd-4841-ae27-f2d621686756"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("f483fb9f-477c-4a3a-9f73-3b028b06ed49"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("87787f6e-729b-436b-bcc9-c7b48c45ba05"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("d30fa796-5144-4467-a302-68dc64fd0d92"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("91d0da1b-e147-4829-aa4e-7073c1a10d2c"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("fbd62259-a313-4d38-885e-1f6acdf9a30a"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("9b8c6d7b-754f-420c-b574-4a63326bfc6a"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("6e2f7a2d-1994-419b-8c6d-b3d297cd7b06"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("853988db-ad55-4a28-9782-90438c64b62d"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("60a119e1-610c-42fc-85c8-95a7e4d2119b"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("870559eb-5fde-4764-ade7-392b0cf6b5ce"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("296dbab2-62f2-4eb6-ae53-e4c7fffdaf34"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("b2687ce8-aad5-4d5f-849b-dcd2b402aff0"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalItem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("AvgRate")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("NumberOfPage")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSale")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("ProductThumbUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("Name");

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9243d741-a350-4067-bb29-395e9becf57e"),
                            AuthorName = "Michael Goodwin",
                            CategoryId = new Guid("99ada3c1-eea5-4431-a529-b3114de224da"),
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 956, DateTimeKind.Utc).AddTicks(9243),
                            IsDelete = false,
                            Name = "Economix",
                            NumberOfPage = 310,
                            NumberOfSale = 0,
                            Price = 10m,
                            ProductThumbUrl = "https://bizweb.dktcdn.net/thumb/1024x1024/100/363/455/products/economix01.jpg?v=1705552583773",
                            Quantity = 1000,
                            Sku = "9243d741-a350-4067-bb29-395e9becf57e",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e21f3a87-20d5-420e-ba33-9108df996747"),
                            AuthorName = "Malcolm Gladwell",
                            CategoryId = new Guid("99ada3c1-eea5-4431-a529-b3114de224da"),
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 956, DateTimeKind.Utc).AddTicks(9361),
                            IsDelete = false,
                            Name = "Outliers",
                            NumberOfPage = 416,
                            NumberOfSale = 0,
                            Price = 10m,
                            ProductThumbUrl = "https://bizweb.dktcdn.net/thumb/large/100/197/269/products/nhung-ke-xuat-chung.jpg?v=1526893051653",
                            Quantity = 1000,
                            Sku = "e21f3a87-20d5-420e-ba33-9108df996747",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2baf4c50-c927-4b54-971e-3ff5f300e147"),
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7307),
                            Name = "Romance",
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7309)
                        },
                        new
                        {
                            Id = new Guid("99ada3c1-eea5-4431-a529-b3114de224da"),
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7317),
                            Name = "Economic",
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7318)
                        },
                        new
                        {
                            Id = new Guid("adf36edc-3e08-4a36-8e20-0d79747f0962"),
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7320),
                            Name = "Business and Money",
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7321)
                        },
                        new
                        {
                            Id = new Guid("292c90a5-1a0a-45a4-8f3d-37f09b09b422"),
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7323),
                            Name = "History",
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7323)
                        },
                        new
                        {
                            Id = new Guid("97cf6bd7-7290-449a-a61d-5ea2fdfcf8de"),
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7325),
                            Name = "Education and Teacher",
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 954, DateTimeKind.Utc).AddTicks(7326)
                        });
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Order", "ProductId")
                        .IsUnique();

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RateValue")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductRatings");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.RatingResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("RatingResources");
                });

            modelBuilder.Entity("Shoppy.Persistence.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique()
                        .HasFilter("[CartId] IS NOT NULL");

                    b.HasIndex("Email");

                    b.HasIndex("FullName");

                    b.HasIndex("Gender");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("IsDelete", "NormalizedEmail");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("85d8a27f-9d32-4269-b5d0-844589d498d0"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d4525dc2-4678-4fce-83fa-4c95a0619aa2",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 58, DateTimeKind.Utc).AddTicks(6179),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FullName = "John Doe",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENgi98+4PbHl9Ac2kd9p7XFJScTFZCnRD8u409IHvSEDQuJUYU1GcJcUWqU6g9eI7g==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "5e1df2ed-5c9e-4cf0-af92-b66a23719cca",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 58, DateTimeKind.Utc).AddTicks(6182),
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("021657c8-d4d0-4167-a1a6-b7bb840f33bf"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29d8a2a2-7f33-439b-8c2d-4b844edff675",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 231, DateTimeKind.Utc).AddTicks(5977),
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Jane Smith",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJVaeVNRZaHYvaAm2C+yvtxLZpmcbp/X+RLx7cQgrv8x3rZSsV8IgPSxPGuJXMYJ9A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "876afdf9-9307-4e88-8f7d-5d445ca1b50a",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 231, DateTimeKind.Utc).AddTicks(5984),
                            UserName = "user1@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2c96fabb-f759-43ef-9a31-328c25d2eff5"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d90a092-eb48-4d0c-aeda-0b61b86c20bf",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 414, DateTimeKind.Utc).AddTicks(3717),
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Michael Johnson",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGzyZujwiCXHu2T9P2nhwbJK5LsvgFd95QbftgaCw19IkTrGz42j5g3rW+wXI2s5ZA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "956984a5-329a-47d0-927e-7fd7b12cdb5a",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 414, DateTimeKind.Utc).AddTicks(3719),
                            UserName = "user2@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("30a4345d-df2e-46ab-8c0e-d38a7933b591"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4dbcf81b-b826-42be-88f9-92850cf07de1",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 554, DateTimeKind.Utc).AddTicks(6085),
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Emily Davis",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHacJbV5lgzZy1t0289Nuy5/6YbwyQunvsM6aw2KzgUcUhTbynpVA4QEjN5LrK6gjQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "7aa08661-312f-4327-8b3c-b264dc94ba61",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 554, DateTimeKind.Utc).AddTicks(6087),
                            UserName = "user3@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("594f8fe1-1cf1-4f5a-a8ae-6b9509fbf283"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "14e6dee6-71c3-46bc-97cc-374bf518b6ba",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 665, DateTimeKind.Utc).AddTicks(3205),
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            FullName = "David Lee",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC+OaqVQ9ybj+zhlMMTMOO2gKzbxTKa3tkV6IAidU9MBPNwtbM3JbsUBnl3qiJuSfQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "de190c89-5293-47ae-9bc5-0247dcfece1c",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 665, DateTimeKind.Utc).AddTicks(3207),
                            UserName = "user4@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("eee6e626-9a26-4f38-bbe3-433d20440ce9"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3d8d9ce5-ce87-4cab-97f7-f60bb9fe818c",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 780, DateTimeKind.Utc).AddTicks(2838),
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Sarah Kim",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEmTILrSv54pBbi22x5qJiNyXzYpASHD7241irl+OZIINo1HKDE5cMqL+rKSl1Bqmw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "c9b4d607-859d-48d6-bf12-1936caf50e3a",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 780, DateTimeKind.Utc).AddTicks(2843),
                            UserName = "user5@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("7db124bd-9953-4eb0-98f2-50b1be635544"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "775c41f4-b4aa-40a0-99e1-2f1bd8e26a1a",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 905, DateTimeKind.Utc).AddTicks(3956),
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Robert Patel",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAcPyvP5m3xHxIlowAONmVwUYkbdYVq1MgZdTJmNEepEaIVT3IHWU14TWNbOgzpkjA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f5a4bcf9-3509-41b3-9810-ba8b13d5c50f",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 3, 905, DateTimeKind.Utc).AddTicks(3959),
                            UserName = "user6@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d183"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e9edeab2-8d97-4b16-8d12-0065d2673a84",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 20, DateTimeKind.Utc).AddTicks(643),
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Lisa Nguyen",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGkUmNGjffBO/VYXx9liqxclbfGpbSPk8fvjnICa4muHidK58KoKnyx7+RpmMBi1/Q==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "ed552d91-b2dd-4247-9796-d2edee04caea",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 20, DateTimeKind.Utc).AddTicks(645),
                            UserName = "user7@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d184"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d68b83b5-659f-49ab-bd74-328ed814774e",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 118, DateTimeKind.Utc).AddTicks(655),
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 8",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDFS0d9waiHp4bx/OjXsAwg6CogtaqN0Qrzj5zWHwgGv7xbJ2AdDtu1PNVuS60qBGw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "6d122aa1-8456-498e-8927-a72e909923a2",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 118, DateTimeKind.Utc).AddTicks(658),
                            UserName = "user8@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("8c3b46b9-1321-4d97-a193-5fa49234d185"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a48f788-4b4b-4c6c-943f-caaf9155c5dc",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 220, DateTimeKind.Utc).AddTicks(579),
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 9",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFfhhdl/TtzbDHOpbPLI4SzjR5jy6679gPyFrs6DrV5OlLSn1M8aQiIL6JbY65+gfQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "de5086fb-6e48-4848-9a11-f3e5352644bb",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 220, DateTimeKind.Utc).AddTicks(581),
                            UserName = "user9@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2d3d5b2d-b5a3-4b89-84b3-5fa49234d186"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8af5119e-33d1-4287-990b-d9982e944587",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 328, DateTimeKind.Utc).AddTicks(2771),
                            Email = "user10@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 10",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER10@GMAIL.COM",
                            NormalizedUserName = "USER10@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHa+5aweWPlcPyaczPbjSDxHD0/kspVPmtt2GQ1UVXhCyTXwxToZ1i+1NnM8XPVTEA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "9fadee71-76cd-4015-b116-6d0fdc31c694",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 328, DateTimeKind.Utc).AddTicks(2773),
                            UserName = "user10@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("b6123f4e-3443-41ae-a1cb-5fa49234d187"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "566b359d-685e-4300-a864-83c1bb10f0a9",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 449, DateTimeKind.Utc).AddTicks(1672),
                            Email = "user11@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 11",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER11@GMAIL.COM",
                            NormalizedUserName = "USER11@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHyd5Yc1J1IHVG6pNw67oGk1UZtYK4ftlg3lzJgwQEykDtgvXbghHb/+GPcnjuTMyQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "73a9073c-6bf7-4d77-bcdb-b716e62c7ed7",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 449, DateTimeKind.Utc).AddTicks(1675),
                            UserName = "user11@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("5c6a5f5e-3a11-4d42-bff8-5fa49234d188"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6b1bf79a-7c1e-4f12-b8f4-ec46c3950909",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 544, DateTimeKind.Utc).AddTicks(5574),
                            Email = "user12@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 12",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER12@GMAIL.COM",
                            NormalizedUserName = "USER12@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDDLn1ute7Bq/f85z7U1Q1wLJwi5FdgIMlkr4wyY/hE5ZuxEfGXvUoPhrPmVuSMtdg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "3a4cf827-ec39-49e4-b120-66d2c1cbae87",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 544, DateTimeKind.Utc).AddTicks(5577),
                            UserName = "user12@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("4a8b3d09-78f2-43ad-bce6-5fa49234d189"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02ba10df-82b6-4a61-9175-0251ade4e8af",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 634, DateTimeKind.Utc).AddTicks(2476),
                            Email = "user13@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 13",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER13@GMAIL.COM",
                            NormalizedUserName = "USER13@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEM9Aj8IQfHBqyBdq1ReLSaczKmM4xC3pj3pXqUjl5SEHrbR40oNBMQ0J2Qnkqw16dA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f2bedd8f-258e-4925-9df4-71bbe50e41e4",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 634, DateTimeKind.Utc).AddTicks(2479),
                            UserName = "user13@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("31e7a1a6-9a5d-4b4e-84eb-5fa49234d190"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "46e22cfa-994a-4e13-8442-06e75ff25130",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 724, DateTimeKind.Utc).AddTicks(2243),
                            Email = "user14@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 14",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER14@GMAIL.COM",
                            NormalizedUserName = "USER14@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMZSfc31bVfkmNHuUShZBf7OlBKIV6ZxATom9rkeSXDU8wORJRzy16R73sh8Mjx1nw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "717530dd-bf66-4726-9205-0002fddc1e4c",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 724, DateTimeKind.Utc).AddTicks(2245),
                            UserName = "user14@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("d0e03a1a-21c2-4123-a75e-5fa49234d191"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bd521b7c-9104-4ac8-ac6b-ee9c7224f5a7",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 838, DateTimeKind.Utc).AddTicks(3232),
                            Email = "user15@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 15",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER15@GMAIL.COM",
                            NormalizedUserName = "USER15@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMV8PwfC4zhL5kpI943qDeRtZQhbyesugYzHPijbdbbc2h23B87imZynEX8sDgK/CA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "9d3eaab7-d021-4f92-8114-f4120f42ec3e",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 4, 838, DateTimeKind.Utc).AddTicks(3235),
                            UserName = "user15@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("0cd66cfc-5d48-4f5e-b22d-5fa49234d192"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c069b003-2dd3-46e8-82d0-5fae49738b3f",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 7, DateTimeKind.Utc).AddTicks(933),
                            Email = "user16@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 16",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER16@GMAIL.COM",
                            NormalizedUserName = "USER16@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAED2KZQuxEz9X/SP0cdFjyXgqCrkpr9fJ/taUZBH1Q+TR5P3zQ+QUaj5jMDpSUXhL+g==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "5072180a-f2f9-4aa7-9856-50ce64000931",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 7, DateTimeKind.Utc).AddTicks(936),
                            UserName = "user16@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("60b9f0cc-b3b4-4ac3-a9ce-5fa49234d193"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "655cdccb-82d7-4992-8337-d0065b93cb86",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 122, DateTimeKind.Utc).AddTicks(3871),
                            Email = "user17@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 17",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER17@GMAIL.COM",
                            NormalizedUserName = "USER17@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMi3E09XUX0lBKaItMDfEqhLVPgzGEPfNsazZrJ7iMO1YOKwBwaG4UXQGVib3Ns+mQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "a0216501-31a8-4b8b-a266-3e0effedd823",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 122, DateTimeKind.Utc).AddTicks(3874),
                            UserName = "user17@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("6c16a235-f928-4b8d-978f-5fa49234d194"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bea3d00a-2c2d-4fa8-95ce-d83b9fdb427b",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 257, DateTimeKind.Utc).AddTicks(5599),
                            Email = "user18@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 18",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER18@GMAIL.COM",
                            NormalizedUserName = "USER18@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEA2ZcZ96RWOap1vcrmfuIaWpRHV5Obt0cw1FxnGefS0tWXHS6+PRlJgLvQWsGyohog==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "5b99efb2-cb3e-4019-a512-3e33518b1d22",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 257, DateTimeKind.Utc).AddTicks(5601),
                            UserName = "user18@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("9a4a34a4-4b12-4c8e-a52b-5fa49234d195"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "19e5ce52-aa68-4ecf-82ef-9e53d596a85d",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 364, DateTimeKind.Utc).AddTicks(2273),
                            Email = "user19@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 19",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER19@GMAIL.COM",
                            NormalizedUserName = "USER19@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOrTm9ZAeNY3zYAKZHTCRe6u4zOD4wFfJz45bz4si2ol6+ELBR5jtAKn3da1jXEHbQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "23f34e2f-c788-4d95-84ca-00fdda16d5bb",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 364, DateTimeKind.Utc).AddTicks(2275),
                            UserName = "user19@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("35d6cf06-f0ef-47a6-a4bd-5fa49234d196"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "60799f45-08f2-4347-a64e-830492b934b4",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 480, DateTimeKind.Utc).AddTicks(164),
                            Email = "user20@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 20",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER20@GMAIL.COM",
                            NormalizedUserName = "USER20@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBLu4m0mrkjmWDMgDufwLMZ3DKArtswZ5aLf3NUPJd3eyy5A4ygDQDkY/G/ySGmUNw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "c9dbb0b0-ef02-47cd-a4bf-2623b4196995",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 480, DateTimeKind.Utc).AddTicks(166),
                            UserName = "user20@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("eeed5a4d-e83d-4032-8c3c-5fa49234d197"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "96f5a266-9a14-401a-8ddb-875d57b18c93",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 593, DateTimeKind.Utc).AddTicks(7666),
                            Email = "user21@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 21",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER21@GMAIL.COM",
                            NormalizedUserName = "USER21@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEP4jIyGlcZsUY8jUCRoINVIuMdPhAV/HJ1kjpTVq3jvvquy94vgsd7x97d/pckAe9g==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "afd31cb1-2755-4558-a7ea-458ab0bf28a8",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 593, DateTimeKind.Utc).AddTicks(7669),
                            UserName = "user21@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2b844c01-c89e-4d24-a5d8-5fa49234d198"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a1e1aa09-3321-41eb-a202-348b6ed52e12",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 719, DateTimeKind.Utc).AddTicks(6946),
                            Email = "user22@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 22",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER22@GMAIL.COM",
                            NormalizedUserName = "USER22@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAUAQvzZ1eOIzmtdWiTbP3mdYtmyJjP7AxafDDIEaHq5Rkbypfjw52o5NsYvtgiWhQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f9038fa9-f589-4c92-a34f-e929ed19f0d0",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 719, DateTimeKind.Utc).AddTicks(6950),
                            UserName = "user22@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("56b2a1c9-a651-4fee-8f8e-5fa49234d199"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "415c9942-88fd-4eb6-9a76-6157b2f5d12d",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 810, DateTimeKind.Utc).AddTicks(2301),
                            Email = "user23@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 23",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER23@GMAIL.COM",
                            NormalizedUserName = "USER23@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEM4C8ZuKnxNBy54uhNuwSkUdt5+DL0cN4IhiLoZW3LhQbCC5bWNJFAsJtaSGpaYMvg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "0671c679-06c7-4a22-893a-17d0654c4766",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 810, DateTimeKind.Utc).AddTicks(2305),
                            UserName = "user23@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("3d77db7b-3b3e-4a38-a1d1-5fa49234d200"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6583c2dc-849c-456d-9ebc-3c793e060a87",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 902, DateTimeKind.Utc).AddTicks(8035),
                            Email = "user24@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 24",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER24@GMAIL.COM",
                            NormalizedUserName = "USER24@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHiPTHYNkqUYfuWcAYbK4oFoZHdMYQ0c3+lQ9nCDLDJEkuY0aAn7hOy6jfxo6zEqBA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "7acd2408-b750-476e-83c2-145b4c1f3ed1",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 902, DateTimeKind.Utc).AddTicks(8037),
                            UserName = "user24@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("c0a7e4f4-d8d0-4c80-8e1c-5fa49234d201"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b370bacc-4f47-4507-ab33-591a1116e358",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 992, DateTimeKind.Utc).AddTicks(8464),
                            Email = "user25@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 25",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER25@GMAIL.COM",
                            NormalizedUserName = "USER25@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGgZZKTkACpPxuFY9azL2vsdWpY0TeZd53DJmFfbF/gAuLGW85Vhf53geKrKT5pHbw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f84308fa-daa6-4da7-8c2f-05befcd9048f",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 5, 992, DateTimeKind.Utc).AddTicks(8466),
                            UserName = "user25@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("1d2b5cf5-0ad7-4c3a-b4b9-5fa49234d202"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29c26204-71c3-4e2c-b476-abdc9cd80bb0",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 88, DateTimeKind.Utc).AddTicks(5693),
                            Email = "user26@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 26",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER26@GMAIL.COM",
                            NormalizedUserName = "USER26@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIm1Vf9/1u5F6VxqhF+GyTVT3Dx7UaGt89pAjzcchspfsz6Nnkjys05BKAPZJ8WqHw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "68145281-74c4-4d14-978d-793d763482be",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 88, DateTimeKind.Utc).AddTicks(5695),
                            UserName = "user26@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("9d36fef6-9c75-4f96-a951-5fa49234d203"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f8d00561-4c5f-4fa8-a246-dd466efb5335",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 178, DateTimeKind.Utc).AddTicks(753),
                            Email = "user27@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 27",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER27@GMAIL.COM",
                            NormalizedUserName = "USER27@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEI7vwMd7u6Iv8n6BkaLAwm3pr94pbRLgkI9lQC5FFM10Ns31Zl9AAilLIibRzxFwXA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "458bb361-e96e-4fd9-8c67-04f1f2bfc447",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 178, DateTimeKind.Utc).AddTicks(758),
                            UserName = "user27@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("5aca3775-d37e-473c-8f3a-3926ed32e360"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "82499e12-d42a-4ed4-9d4c-5440debeb777",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 269, DateTimeKind.Utc).AddTicks(3041),
                            Email = "user28@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 28",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER28@GMAIL.COM",
                            NormalizedUserName = "USER28@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECawHzVFnwRQdUfUCnYoK9bilGR2z5mRRfrfwLGyQxvUPomlOwstKaSkxBN013+ImA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "452b40b4-28b9-40e6-8001-6361adc1778d",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 269, DateTimeKind.Utc).AddTicks(3044),
                            UserName = "user28@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("e92c6f32-859b-443b-bfb2-bd0674b5673a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6970246-6105-4a9e-8128-9969500a608f",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 359, DateTimeKind.Utc).AddTicks(3974),
                            Email = "user29@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 29",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER29@GMAIL.COM",
                            NormalizedUserName = "USER29@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGfkHP8gRe4VPlidzPz6ljI9EtSPwwYbsJAL73+qOjfPnm1xbOnshgPulHKI7dJyQA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "95bec683-e62e-46da-a2bf-3c6829c72c55",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 359, DateTimeKind.Utc).AddTicks(3977),
                            UserName = "user29@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2c44d375-c725-4279-b2d3-87ea4218f385"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e3735e7d-7d95-4157-a751-5a4a0c1518d9",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 451, DateTimeKind.Utc).AddTicks(2668),
                            Email = "user30@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 30",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER30@GMAIL.COM",
                            NormalizedUserName = "USER30@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEN9lRwW94a15dDlX3+RkZMVjlXfwLENhNFFZtRcBAHoOW4DGElUiop9bvX3dXVDSJQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "aa9728da-8028-458b-ad69-f8a6dbc35f52",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 451, DateTimeKind.Utc).AddTicks(2671),
                            UserName = "user30@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("906f192a-96d3-433a-a7ea-288662b5f62d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "92cde726-80bd-4f55-8676-e2bc72f74597",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 542, DateTimeKind.Utc).AddTicks(7518),
                            Email = "user31@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 31",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER31@GMAIL.COM",
                            NormalizedUserName = "USER31@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKsXEd6I1kLX83GPqYLQC7TSTsf006TdPXJlg3c7F88m33lydiTKd+OlMPKzSoRoQA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "5a46d429-66af-4dc5-89c2-9a7a0dfcef60",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 542, DateTimeKind.Utc).AddTicks(7520),
                            UserName = "user31@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("c55cdfd0-d1dd-4841-ae27-f2d621686756"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec0211d3-e5ef-46a7-9b16-8ff750fd7772",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 633, DateTimeKind.Utc).AddTicks(4841),
                            Email = "user32@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 32",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER32@GMAIL.COM",
                            NormalizedUserName = "USER32@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEH+rhr8CPrnpjy9F72x7LfZMwF+ZXF9kypT90xSflqAUZ/+8spGJs5+2ZYwNtMIAfQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "97db90c9-08c1-43b8-a37b-f5a8c01d0bfc",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 633, DateTimeKind.Utc).AddTicks(4844),
                            UserName = "user32@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("f483fb9f-477c-4a3a-9f73-3b028b06ed49"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5189ea3a-8db5-440b-8295-613f840b9da5",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 722, DateTimeKind.Utc).AddTicks(3962),
                            Email = "user33@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 33",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER33@GMAIL.COM",
                            NormalizedUserName = "USER33@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENIzpEumGsdQhvCB6fZ2eqLyAWKwJpL5OmoFsu+YE6Imwd++8L4ji05VBeIDV9h5wA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "35281935-d299-4242-aa07-d42b2d4086e3",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 722, DateTimeKind.Utc).AddTicks(3964),
                            UserName = "user33@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("87787f6e-729b-436b-bcc9-c7b48c45ba05"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c4e374e8-156b-4333-822b-1683d3dadf1c",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 817, DateTimeKind.Utc).AddTicks(9713),
                            Email = "user34@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 34",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER34@GMAIL.COM",
                            NormalizedUserName = "USER34@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELjWDXGVK3d9lyhCiQ88oDGBvbGyZwZgf2F/zRmr2M1oBDxQQHAHLqR4lIYOgR3zYQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "c52f8082-ad21-4a3b-9bc3-292ccca5789c",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 817, DateTimeKind.Utc).AddTicks(9716),
                            UserName = "user34@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("d30fa796-5144-4467-a302-68dc64fd0d92"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cdb68856-8cd4-4366-ab90-e8ca0ad32ec8",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 907, DateTimeKind.Utc).AddTicks(4450),
                            Email = "user35@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 35",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER35@GMAIL.COM",
                            NormalizedUserName = "USER35@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEH15TGoSdZnI5Stx8tEo1QyYbvIaOVwGs/TJ6E0VyTaNIZJjr2ouM1WC+vfFUkMw6Q==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "61e83ebe-4a5c-4de0-99ed-3f738ea24586",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 6, 907, DateTimeKind.Utc).AddTicks(4453),
                            UserName = "user35@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("91d0da1b-e147-4829-aa4e-7073c1a10d2c"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1bf808d8-58ff-4e38-b509-d06b3e7cb3dc",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 8, DateTimeKind.Utc).AddTicks(8212),
                            Email = "user36@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 36",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER36@GMAIL.COM",
                            NormalizedUserName = "USER36@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELHJoAlPGJU3DA+bU9lLbn8C44bjGHHvJ5AOePQ3AEoiB7HRnFJ083jN6MAd6hWoaA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "1272636b-e948-4870-ace0-eed8bf91568a",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 8, DateTimeKind.Utc).AddTicks(8216),
                            UserName = "user36@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("fbd62259-a313-4d38-885e-1f6acdf9a30a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3fd4d310-365d-4e5a-a105-81cf026e185e",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 122, DateTimeKind.Utc).AddTicks(4150),
                            Email = "user37@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 37",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER37@GMAIL.COM",
                            NormalizedUserName = "USER37@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDLXPBlwGsthY3XoZbBs6HyjYOtatTBtLIXdqDkhEDpYGRxiirK4XcDdi3aCQS5SxA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "7e4c8eef-0b68-4680-aad6-2da2362e6545",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 122, DateTimeKind.Utc).AddTicks(4153),
                            UserName = "user37@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("9b8c6d7b-754f-420c-b574-4a63326bfc6a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e477ef6b-1a27-473b-8959-e73449937ca0",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 232, DateTimeKind.Utc).AddTicks(1958),
                            Email = "user38@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 38",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER38@GMAIL.COM",
                            NormalizedUserName = "USER38@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIt8JDZRhjnfZqxSme33X9jHJ6d4JDoJVlCtHxooTRtIsKLgvMM/GXK5zei908PFfA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "76d5cad8-4d3d-4daf-8df4-8771896c6d99",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 232, DateTimeKind.Utc).AddTicks(1962),
                            UserName = "user38@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("6e2f7a2d-1994-419b-8c6d-b3d297cd7b06"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "928bf84d-09ef-4c75-9b6f-0f786fa95bd3",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 324, DateTimeKind.Utc).AddTicks(4796),
                            Email = "user39@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 39",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER39@GMAIL.COM",
                            NormalizedUserName = "USER39@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECU2jCWqzJhl7LRGhaDjubQ4QL31P2+62iVTQ/75XyhUJD89LYUdX4/NMUyOqA2Leg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f12d492a-c000-4434-9d6a-dd09952beadc",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 324, DateTimeKind.Utc).AddTicks(4800),
                            UserName = "user39@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("853988db-ad55-4a28-9782-90438c64b62d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fbc3664c-5735-4152-93b8-39e3c410939b",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 451, DateTimeKind.Utc).AddTicks(5707),
                            Email = "user40@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 40",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER40@GMAIL.COM",
                            NormalizedUserName = "USER40@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEy+E95fDNK6Sqcqkp075DbvJQSx9Ee9Hi+kWXlwi+70Vj9Ed5qXueiCSjOVCSzN8g==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "3e8ab264-79e7-447e-8b0a-d9c5e6c0d755",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 451, DateTimeKind.Utc).AddTicks(5711),
                            UserName = "user40@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("60a119e1-610c-42fc-85c8-95a7e4d2119b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1284da79-cbba-4744-acbe-f7bb50d7ed66",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 561, DateTimeKind.Utc).AddTicks(985),
                            Email = "user41@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 41",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER41@GMAIL.COM",
                            NormalizedUserName = "USER41@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC/SnudtWiZzv84EO1StN833Gga2FdrX8ntX6DCzzA4oh4+ko0/b7sMI0O3j4taC5A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "92e5aad3-d685-4e18-842d-e569148dadf4",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 561, DateTimeKind.Utc).AddTicks(988),
                            UserName = "user41@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("870559eb-5fde-4764-ade7-392b0cf6b5ce"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c5e318f1-e001-419b-b423-4ed42f0f0e5a",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 664, DateTimeKind.Utc).AddTicks(1434),
                            Email = "user42@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 42",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER42@GMAIL.COM",
                            NormalizedUserName = "USER42@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJJe7N0R+WJ4mEDqBp0YOmXo/3go/GLHbGpJ3VcfwIFQQJogiqdhnwCdzMjsd6i55A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "11ad84c7-e8fc-4201-bdc6-a5500633554c",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 664, DateTimeKind.Utc).AddTicks(1437),
                            UserName = "user42@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("296dbab2-62f2-4eb6-ae53-e4c7fffdaf34"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "93f69e3a-728a-436e-98bc-237ae8ae4355",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 758, DateTimeKind.Utc).AddTicks(939),
                            Email = "user43@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 43",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER43@GMAIL.COM",
                            NormalizedUserName = "USER43@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEF9CxTN0Y2OrWWyHdOfX1D8hkHGyDJhGc/j/4qw594mG2DUjG9OF4znbDSvVXrxR7A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "26972e0f-5ea9-49a4-84da-1bc6c9db463a",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 758, DateTimeKind.Utc).AddTicks(941),
                            UserName = "user43@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("b2687ce8-aad5-4d5f-849b-dcd2b402aff0"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b246b77d-95d1-415c-a600-8610ad62fe96",
                            CreatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 849, DateTimeKind.Utc).AddTicks(961),
                            Email = "user44@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 44",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER44@GMAIL.COM",
                            NormalizedUserName = "USER44@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBzCXOPDTEcs2GuqO7cDmCZA/QDdGFdbE2klIzAwfQjMaI1tjZuNlpQn92n6eXKJ/A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "38e453f2-6134-43b2-98f2-7dec6ef788ce",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 16, 15, 48, 7, 849, DateTimeKind.Utc).AddTicks(963),
                            UserName = "user44@gmail.com"
                        });
                });

            modelBuilder.Entity("AppUserIdentityRole<Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("IdentityRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Address", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.CartItem", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("Shoppy.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Order", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("Shoppy.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Product", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.ProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductRating", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.RatingResource", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.ProductRating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("Shoppy.Persistence.Identity.AppUser", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Cart", "Cart")
                        .WithOne()
                        .HasForeignKey("Shoppy.Persistence.Identity.AppUser", "CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Product", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
