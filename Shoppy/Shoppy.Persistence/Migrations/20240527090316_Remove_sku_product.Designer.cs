// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shoppy.Persistence;

#nullable disable

namespace Shoppy.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240527090316_Remove_sku_product")]
    partial class Remove_sku_product
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppUserIdentityRole<Guid>", b =>
                {
                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppUserId", "IdentityRoleId");

                    b.HasIndex("IdentityRoleId");

                    b.ToTable("AppUserIdentityRole<Guid>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3"),
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = new Guid("5fc71af5-0216-402b-a5cb-ba17701e2fa3"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("85d8a27f-9d32-4269-b5d0-844589d498d0"),
                            RoleId = new Guid("5fc71af5-0216-402b-a5cb-ba17701e2fa3")
                        },
                        new
                        {
                            UserId = new Guid("021657c8-d4d0-4167-a1a6-b7bb840f33bf"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2c96fabb-f759-43ef-9a31-328c25d2eff5"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("30a4345d-df2e-46ab-8c0e-d38a7933b591"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("594f8fe1-1cf1-4f5a-a8ae-6b9509fbf283"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("eee6e626-9a26-4f38-bbe3-433d20440ce9"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("7db124bd-9953-4eb0-98f2-50b1be635544"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d183"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d184"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("8c3b46b9-1321-4d97-a193-5fa49234d185"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2d3d5b2d-b5a3-4b89-84b3-5fa49234d186"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("b6123f4e-3443-41ae-a1cb-5fa49234d187"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("5c6a5f5e-3a11-4d42-bff8-5fa49234d188"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("4a8b3d09-78f2-43ad-bce6-5fa49234d189"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("31e7a1a6-9a5d-4b4e-84eb-5fa49234d190"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("d0e03a1a-21c2-4123-a75e-5fa49234d191"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("0cd66cfc-5d48-4f5e-b22d-5fa49234d192"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("60b9f0cc-b3b4-4ac3-a9ce-5fa49234d193"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("6c16a235-f928-4b8d-978f-5fa49234d194"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("9a4a34a4-4b12-4c8e-a52b-5fa49234d195"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("35d6cf06-f0ef-47a6-a4bd-5fa49234d196"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("eeed5a4d-e83d-4032-8c3c-5fa49234d197"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2b844c01-c89e-4d24-a5d8-5fa49234d198"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("56b2a1c9-a651-4fee-8f8e-5fa49234d199"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("3d77db7b-3b3e-4a38-a1d1-5fa49234d200"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("c0a7e4f4-d8d0-4c80-8e1c-5fa49234d201"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("1d2b5cf5-0ad7-4c3a-b4b9-5fa49234d202"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("9d36fef6-9c75-4f96-a951-5fa49234d203"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("5aca3775-d37e-473c-8f3a-3926ed32e360"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("e92c6f32-859b-443b-bfb2-bd0674b5673a"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("2c44d375-c725-4279-b2d3-87ea4218f385"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("906f192a-96d3-433a-a7ea-288662b5f62d"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("c55cdfd0-d1dd-4841-ae27-f2d621686756"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("f483fb9f-477c-4a3a-9f73-3b028b06ed49"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("87787f6e-729b-436b-bcc9-c7b48c45ba05"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("d30fa796-5144-4467-a302-68dc64fd0d92"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("91d0da1b-e147-4829-aa4e-7073c1a10d2c"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("fbd62259-a313-4d38-885e-1f6acdf9a30a"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("9b8c6d7b-754f-420c-b574-4a63326bfc6a"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("6e2f7a2d-1994-419b-8c6d-b3d297cd7b06"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("853988db-ad55-4a28-9782-90438c64b62d"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("60a119e1-610c-42fc-85c8-95a7e4d2119b"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("870559eb-5fde-4764-ade7-392b0cf6b5ce"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("296dbab2-62f2-4eb6-ae53-e4c7fffdaf34"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        },
                        new
                        {
                            UserId = new Guid("b2687ce8-aad5-4d5f-849b-dcd2b402aff0"),
                            RoleId = new Guid("8bbf66a4-da08-4b87-bdb2-1502e38562f3")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TotalItem")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("AvgRate")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("NumberOfPage")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSale")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("ProductThumbUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("Name");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9243d741-a350-4067-bb29-395e9becf57e"),
                            AuthorName = "Michael Goodwin",
                            CategoryId = new Guid("99ada3c1-eea5-4431-a529-b3114de224da"),
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 255, DateTimeKind.Utc).AddTicks(4867),
                            IsDelete = false,
                            Name = "Economix",
                            NumberOfPage = 310,
                            NumberOfSale = 0,
                            Price = 10m,
                            ProductThumbUrl = "https://bizweb.dktcdn.net/thumb/1024x1024/100/363/455/products/economix01.jpg?v=1705552583773",
                            Quantity = 1000,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e21f3a87-20d5-420e-ba33-9108df996747"),
                            AuthorName = "Malcolm Gladwell",
                            CategoryId = new Guid("99ada3c1-eea5-4431-a529-b3114de224da"),
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 255, DateTimeKind.Utc).AddTicks(4889),
                            IsDelete = false,
                            Name = "Outliers",
                            NumberOfPage = 416,
                            NumberOfSale = 0,
                            Price = 10m,
                            ProductThumbUrl = "https://bizweb.dktcdn.net/thumb/large/100/197/269/products/nhung-ke-xuat-chung.jpg?v=1526893051653",
                            Quantity = 1000,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2baf4c50-c927-4b54-971e-3ff5f300e147"),
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3941),
                            Name = "Romance",
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3943)
                        },
                        new
                        {
                            Id = new Guid("99ada3c1-eea5-4431-a529-b3114de224da"),
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3947),
                            Name = "Economic",
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3948)
                        },
                        new
                        {
                            Id = new Guid("adf36edc-3e08-4a36-8e20-0d79747f0962"),
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3950),
                            Name = "Business and Money",
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3951)
                        },
                        new
                        {
                            Id = new Guid("292c90a5-1a0a-45a4-8f3d-37f09b09b422"),
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3953),
                            Name = "History",
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3954)
                        },
                        new
                        {
                            Id = new Guid("97cf6bd7-7290-449a-a61d-5ea2fdfcf8de"),
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3955),
                            Name = "Education and Teacher",
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 254, DateTimeKind.Utc).AddTicks(3956)
                        });
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Order", "ProductId")
                        .IsUnique();

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RateValue")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId")
                        .IsUnique();

                    b.ToTable("ProductRatings");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.RatingResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("RatingId");

                    b.ToTable("RatingResources");
                });

            modelBuilder.Entity("Shoppy.Persistence.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique()
                        .HasFilter("[CartId] IS NOT NULL");

                    b.HasIndex("Email");

                    b.HasIndex("FullName");

                    b.HasIndex("Gender");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("IsDelete", "NormalizedEmail");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("85d8a27f-9d32-4269-b5d0-844589d498d0"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8daa8c87-a21b-4b91-b6c9-f6056682b3ee",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 5, 993, DateTimeKind.Utc).AddTicks(441),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FullName = "John Doe",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELCpldukycysekGbkyGYZIYnYN2vsXmzaugxazBLjUBwd0NDdbCnS6E5o4EbvOP/qA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "e5e738ed-4e7c-43a3-a74d-46bda4ec0ec4",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 5, 993, DateTimeKind.Utc).AddTicks(443),
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("021657c8-d4d0-4167-a1a6-b7bb840f33bf"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e5a4700f-69af-4bdb-8231-076cee7135e9",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 178, DateTimeKind.Utc).AddTicks(5263),
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Jane Smith",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEM8rI71re/pA68vTZN1iFI+/CJl08wLxVwFElNRmPMDIxRVybsVBXq216yIbuWm5Rg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "74407672-16ba-45a4-84c8-da5cec93168b",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 178, DateTimeKind.Utc).AddTicks(5266),
                            UserName = "user1@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2c96fabb-f759-43ef-9a31-328c25d2eff5"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d453917-ff94-440e-8e9b-8e96209b177c",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 360, DateTimeKind.Utc).AddTicks(3319),
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Michael Johnson",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOz2VYdxDDgyKSaYVI10ZHIB618neVKqYs1AhnoiINiPO/YeaNyiGcxcncSzPogotA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "d04e36c4-bb66-4ba0-83ef-7796864cc26c",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 360, DateTimeKind.Utc).AddTicks(3322),
                            UserName = "user2@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("30a4345d-df2e-46ab-8c0e-d38a7933b591"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b474a9c6-f92f-4de5-a023-8de8bfde2381",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 550, DateTimeKind.Utc).AddTicks(6411),
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Emily Davis",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFFJ46g4RRvdrRnVRW5xgp8IcBK6ExxLWqNeJMy8HPBLMpeDT9uzsLUFJlrCjJVBZg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "807f1bed-d523-4ce3-85a0-5b4ba6f89b7c",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 550, DateTimeKind.Utc).AddTicks(6413),
                            UserName = "user3@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("594f8fe1-1cf1-4f5a-a8ae-6b9509fbf283"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5e0c5238-347b-476a-b479-6c465c74e049",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 970, DateTimeKind.Utc).AddTicks(133),
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            FullName = "David Lee",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJExBTSbMBT7ywaRCnMG7Y4YKFYkMwHKLfBDlNCXEU4SS98nyu0NRVupv4f0Hdd5Xg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "3743588b-e8cd-431a-af37-de582b814c74",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 6, 970, DateTimeKind.Utc).AddTicks(136),
                            UserName = "user4@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("eee6e626-9a26-4f38-bbe3-433d20440ce9"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d659548d-72a2-4ada-948d-e26c36b334e5",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 7, 313, DateTimeKind.Utc).AddTicks(740),
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Sarah Kim",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEI2Q8wi7BrLOUIpLlmKi9TXrmpmyfDc8SxFuHtA99DSLD0i651U+7E5J+Y0Ka2AhWg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "29308e54-710f-4179-ab37-f5df7a8b7939",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 7, 313, DateTimeKind.Utc).AddTicks(742),
                            UserName = "user5@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("7db124bd-9953-4eb0-98f2-50b1be635544"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "692f508b-215b-4997-afe4-e3987ca208d0",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 7, 583, DateTimeKind.Utc).AddTicks(4728),
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Robert Patel",
                            Gender = 1,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAED/xl9gd6pD6RQzThwj9TCc84qvSnAszETi7pVpvTBGt+Q9pyQEVCdBHsk+LxyKe6w==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "594b207c-7e99-4f9b-9082-9373e860b6c1",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 7, 583, DateTimeKind.Utc).AddTicks(4731),
                            UserName = "user6@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d183"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5851e0a2-2f1e-4b94-ab1b-1ed27295ced1",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 7, 821, DateTimeKind.Utc).AddTicks(7867),
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            FullName = "Lisa Nguyen",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEE4hzCNqcN2+xIRA3nSuV33vBq0werBWTZPYmJB6sbcSW5+814xohDH3IwIt0uVn+A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "2ca6c66b-3b54-4a52-ae9f-28032894c3b9",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 7, 821, DateTimeKind.Utc).AddTicks(7872),
                            UserName = "user7@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("50b95f41-7afa-4cda-aa7a-5fa49234d184"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "26a622e4-b877-4351-8ff0-5d55886ac2d9",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 76, DateTimeKind.Utc).AddTicks(983),
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 8",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFVUvJvICvJIuzImY0RLwmU7YYK8RZUxxUcycWN3BVQV2tEnEMvSphlqXCnLI2Myig==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f61796d3-3b5f-4265-b61e-19a637518c19",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 76, DateTimeKind.Utc).AddTicks(986),
                            UserName = "user8@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("8c3b46b9-1321-4d97-a193-5fa49234d185"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a67c3048-f0f3-424a-9442-ac5caa7d9555",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 299, DateTimeKind.Utc).AddTicks(1749),
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 9",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENjyUQWxrSUwbGLNlil9VnHfHn5EXJEozLL90R1OF/Fp9k9O4H+664oC00LPX2do0A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f9d9c7f0-e03d-4cac-ade6-7c0419db82a5",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 299, DateTimeKind.Utc).AddTicks(1751),
                            UserName = "user9@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2d3d5b2d-b5a3-4b89-84b3-5fa49234d186"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "83745cce-506a-4f48-ad08-a00db70826f4",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 508, DateTimeKind.Utc).AddTicks(4369),
                            Email = "user10@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 10",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER10@GMAIL.COM",
                            NormalizedUserName = "USER10@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENT6e09RF3aTK3E2XEdfv7LwYB8PnAVIQSecGt4POc/VRkjAsTApKwR0sAcK5ttEeg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "51c3f3ac-05e0-4203-bc98-30242570bd4f",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 508, DateTimeKind.Utc).AddTicks(4371),
                            UserName = "user10@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("b6123f4e-3443-41ae-a1cb-5fa49234d187"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2fe3ad03-e268-4c61-b4a6-47d91f323594",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 722, DateTimeKind.Utc).AddTicks(3044),
                            Email = "user11@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 11",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER11@GMAIL.COM",
                            NormalizedUserName = "USER11@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOgwiweChDnFBNT1a7o+vssZvUfAjbeOeaLo1C86hX4kqBQk70mVPyBZwjbViNHK5w==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "e21c3774-b67f-465f-afdf-e27705bcd5c5",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 722, DateTimeKind.Utc).AddTicks(3047),
                            UserName = "user11@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("5c6a5f5e-3a11-4d42-bff8-5fa49234d188"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c9e61578-0538-4171-9d5f-2a98fc39e379",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 915, DateTimeKind.Utc).AddTicks(9475),
                            Email = "user12@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 12",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER12@GMAIL.COM",
                            NormalizedUserName = "USER12@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJrqLZYkUGRvPWf+f7m7D/97I7E/S7NcXwatAzpAFWCLKQMJ1izXbBs72sLiZ78nXg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f5a56832-4cb5-402f-953e-5685b8e6aaea",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 8, 915, DateTimeKind.Utc).AddTicks(9477),
                            UserName = "user12@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("4a8b3d09-78f2-43ad-bce6-5fa49234d189"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2110279d-ad62-4ba6-bd65-ff0151a22bb2",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 9, 94, DateTimeKind.Utc).AddTicks(728),
                            Email = "user13@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 13",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER13@GMAIL.COM",
                            NormalizedUserName = "USER13@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDnogL1Dmn0IpTCdVVArwu+G+G6P6DINCMGMBTEmjWMWiOZQLBhLei0EdcUCRkeK/Q==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "be78ad2f-924e-4077-a69a-6f838090ce5b",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 9, 94, DateTimeKind.Utc).AddTicks(732),
                            UserName = "user13@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("31e7a1a6-9a5d-4b4e-84eb-5fa49234d190"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c21a5a2-c823-46f4-aa5d-3e62e9809221",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 9, 462, DateTimeKind.Utc).AddTicks(6415),
                            Email = "user14@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 14",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER14@GMAIL.COM",
                            NormalizedUserName = "USER14@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEuA1qW/eat2/XvViFZW/EX5H8RgMlZhqpf76EFoT24Uv+1pZAza7RZEjIStZgR1dA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "2724d42b-c174-4fe9-89f3-83a1f02ae1be",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 9, 462, DateTimeKind.Utc).AddTicks(6418),
                            UserName = "user14@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("d0e03a1a-21c2-4123-a75e-5fa49234d191"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3fe3193-688b-42e2-bdbd-e49779ffc1d0",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 9, 775, DateTimeKind.Utc).AddTicks(7726),
                            Email = "user15@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 15",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER15@GMAIL.COM",
                            NormalizedUserName = "USER15@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENnJcXRVXoXs57P6cVVGnTn630UIZpMA3FBQLfQrw6SWlxOiFt9JJOIVopca7mozXw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "90b6e416-e9d3-435a-ac27-e569c026f403",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 9, 775, DateTimeKind.Utc).AddTicks(7731),
                            UserName = "user15@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("0cd66cfc-5d48-4f5e-b22d-5fa49234d192"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fb81fa3a-9f83-4b43-8d15-f609c4a602d2",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 16, DateTimeKind.Utc).AddTicks(5204),
                            Email = "user16@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 16",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER16@GMAIL.COM",
                            NormalizedUserName = "USER16@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECw2m/9jv03ynO9+eHL/sfsHM/rn3WH3VZl6Aads3BD0edMGQogJnzQRwmkL5fvqbw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "41fd3f18-4841-477e-b3d8-baf7dc9a93f3",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 16, DateTimeKind.Utc).AddTicks(5207),
                            UserName = "user16@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("60b9f0cc-b3b4-4ac3-a9ce-5fa49234d193"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "efd8ec32-fd2c-447b-bc23-00dfce0e30a6",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 224, DateTimeKind.Utc).AddTicks(9386),
                            Email = "user17@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 17",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER17@GMAIL.COM",
                            NormalizedUserName = "USER17@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAeF7Q9psRHvVeAbTgZtWZ8l7U3ZRsO85M8/969P+QO/c6PZENK+rUMtCJHCnz8Z0A==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "277a320c-a059-41ae-9303-fae28470da60",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 224, DateTimeKind.Utc).AddTicks(9388),
                            UserName = "user17@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("6c16a235-f928-4b8d-978f-5fa49234d194"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dbaa98d2-524a-42d4-b065-f69a31e9d1e2",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 528, DateTimeKind.Utc).AddTicks(9464),
                            Email = "user18@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 18",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER18@GMAIL.COM",
                            NormalizedUserName = "USER18@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDkenwlEcTPn5WDVtONyddQGyIqo0/CkTFBeViA6tSqDnd63pjqCrsUS3JLRzS6abA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f3451bac-22c2-47a3-8256-03bb7980979f",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 528, DateTimeKind.Utc).AddTicks(9467),
                            UserName = "user18@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("9a4a34a4-4b12-4c8e-a52b-5fa49234d195"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e5b0e01-b23c-4627-ae40-a54a2ee10adb",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 743, DateTimeKind.Utc).AddTicks(9962),
                            Email = "user19@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 19",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER19@GMAIL.COM",
                            NormalizedUserName = "USER19@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENfBhCFRGZ/4+v+MC7jY/xgFozobnEn0Ayg7X7aPaYil+iq4Pnz+fF3bEEd6ye5O5w==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "60d71a6b-2bb7-4230-9359-33cbb80d9332",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 743, DateTimeKind.Utc).AddTicks(9965),
                            UserName = "user19@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("35d6cf06-f0ef-47a6-a4bd-5fa49234d196"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c07379c7-ae0e-42b6-b1a9-8ebc66dc2341",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 975, DateTimeKind.Utc).AddTicks(5737),
                            Email = "user20@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 20",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER20@GMAIL.COM",
                            NormalizedUserName = "USER20@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOdJtWcpOmM6b6agY/P1sJfCQ77XkdlrFzXjQv9rDWRTxvjMSh6+frCyKsTCjfu/oA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "65d72297-75de-491a-99e8-f2bf43a3765c",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 10, 975, DateTimeKind.Utc).AddTicks(5740),
                            UserName = "user20@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("eeed5a4d-e83d-4032-8c3c-5fa49234d197"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4af127a3-3e56-4370-ae6c-48345605e3b7",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 150, DateTimeKind.Utc).AddTicks(3219),
                            Email = "user21@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 21",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER21@GMAIL.COM",
                            NormalizedUserName = "USER21@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEI0ZBKkvwbSzZHZ4Zq5RER+bjEBwWUrd13ZYuLPjwXfAB+qjJoSNcSENXpRvNemAVw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f73029a6-c568-4b67-8437-b783f0e7de61",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 150, DateTimeKind.Utc).AddTicks(3222),
                            UserName = "user21@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2b844c01-c89e-4d24-a5d8-5fa49234d198"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e550105a-fb8e-41a8-957d-96027b6a15f2",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 381, DateTimeKind.Utc).AddTicks(8842),
                            Email = "user22@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 22",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER22@GMAIL.COM",
                            NormalizedUserName = "USER22@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBXYBGznVxjNWHMsbz2MIlUgLToI0+SpvgGhVEC17bJ6sqk9tNMMcrk6BqnrDrCOgg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "196a8c56-9a57-4bd9-b80b-a6a391cfd88e",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 381, DateTimeKind.Utc).AddTicks(8848),
                            UserName = "user22@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("56b2a1c9-a651-4fee-8f8e-5fa49234d199"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c76c620-7796-44f3-b6d7-7fdc5770bd52",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 577, DateTimeKind.Utc).AddTicks(1171),
                            Email = "user23@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 23",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER23@GMAIL.COM",
                            NormalizedUserName = "USER23@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC3ZRyyGSO+kDcjb2mlB9ZCRJ/kVHSSsIH819MOmXE4C7IOlUre2xRmE3olEzotH7Q==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "8386d365-e132-4e0e-9711-0ad94c859fbc",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 577, DateTimeKind.Utc).AddTicks(1177),
                            UserName = "user23@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("3d77db7b-3b3e-4a38-a1d1-5fa49234d200"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "97193b2e-e8ba-42dc-97bd-99ded096a8c2",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 760, DateTimeKind.Utc).AddTicks(1531),
                            Email = "user24@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 24",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER24@GMAIL.COM",
                            NormalizedUserName = "USER24@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIvTE9Bm24NslOWjT++yWu/0oCjrLOCsifi2Pj+av8baXA/lTHONrLj3R9cZEQtxpA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "e077823a-9aa7-43f4-9123-15649b4b22c1",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 11, 760, DateTimeKind.Utc).AddTicks(1534),
                            UserName = "user24@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("c0a7e4f4-d8d0-4c80-8e1c-5fa49234d201"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eb3fc4de-6da2-4bc3-8ce6-7c7677408e86",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 49, DateTimeKind.Utc).AddTicks(6618),
                            Email = "user25@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 25",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER25@GMAIL.COM",
                            NormalizedUserName = "USER25@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPW2qykpqZ8ieCtSMJpKuCC7eoKOjCtq7XgQDkODqGDMbsoCfVts6E+ljIIh89ChBw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "7122ade4-4c32-4088-8faa-7636d2575874",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 49, DateTimeKind.Utc).AddTicks(6620),
                            UserName = "user25@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("1d2b5cf5-0ad7-4c3a-b4b9-5fa49234d202"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6277101a-7929-4243-8c99-c1abb6137f7b",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 275, DateTimeKind.Utc).AddTicks(7723),
                            Email = "user26@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 26",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER26@GMAIL.COM",
                            NormalizedUserName = "USER26@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHYHmEALlj7xp6G3Xs9ptA0VW8mFNw3aAFqB0Cgb2G2U0tpsXIhGVdRBkcykXA5Cfw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "459fd7d1-1de9-4b6b-850a-4186bea3d86b",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 275, DateTimeKind.Utc).AddTicks(7725),
                            UserName = "user26@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("9d36fef6-9c75-4f96-a951-5fa49234d203"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2dffa424-3e24-40c4-8a0b-b920eb44bf2e",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 377, DateTimeKind.Utc).AddTicks(7177),
                            Email = "user27@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 27",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER27@GMAIL.COM",
                            NormalizedUserName = "USER27@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKMLoRLXlNMAPAw4WzJ/p0b+qvDAS4iNu1Py9f7HXliEKJ45VIhnT0xjCFChl4kMzw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "97e0d840-a02d-4f6e-b597-a6edf851f27d",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 377, DateTimeKind.Utc).AddTicks(7179),
                            UserName = "user27@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("5aca3775-d37e-473c-8f3a-3926ed32e360"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a72c6b91-6590-40b7-92d8-6364c3b4cec6",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 485, DateTimeKind.Utc).AddTicks(3742),
                            Email = "user28@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 28",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER28@GMAIL.COM",
                            NormalizedUserName = "USER28@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELWBRuBEyDm+NU5Mp8iKaIdNGAjLt9Yyt2gIz36iZ2y1FKPMtu7osyy641KhUp1b/g==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "66d16eda-818c-4073-b45e-9ec894beee90",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 485, DateTimeKind.Utc).AddTicks(3744),
                            UserName = "user28@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("e92c6f32-859b-443b-bfb2-bd0674b5673a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4b56e88f-bd57-497e-a7dc-37aa65eb69e5",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 583, DateTimeKind.Utc).AddTicks(8415),
                            Email = "user29@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 29",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER29@GMAIL.COM",
                            NormalizedUserName = "USER29@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECWOl3aEKtV4qBMQoOyH3O8T6oBOpWZtrjegoJqhAKFo/k02hub8LxybPkQPZPdlzA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "b5291058-0c76-470e-8ba5-a5257db2ceb7",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 583, DateTimeKind.Utc).AddTicks(8417),
                            UserName = "user29@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("2c44d375-c725-4279-b2d3-87ea4218f385"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "832090df-04a2-4cbd-a90b-8aed8314f006",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 677, DateTimeKind.Utc).AddTicks(6551),
                            Email = "user30@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 30",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER30@GMAIL.COM",
                            NormalizedUserName = "USER30@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEo1KQJaH2ptUxEvk7+n85tHJOY3dhMR/kf8YycWoMOqG4qn/YcPP5YYBIkc8kjRqg==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "75ddf683-91b1-4dd4-b0be-99c78ef300c2",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 677, DateTimeKind.Utc).AddTicks(6554),
                            UserName = "user30@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("906f192a-96d3-433a-a7ea-288662b5f62d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7c2faf84-e8f2-475d-bc42-fe31bcbde2ee",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 769, DateTimeKind.Utc).AddTicks(8765),
                            Email = "user31@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 31",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER31@GMAIL.COM",
                            NormalizedUserName = "USER31@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHw13bDR8T2U/VIsrcUwEikcBA8vMmVuhmJb2Pju+8x42cXTx49RXsBX0lCfjZdY/g==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "6ec55a0f-96e5-461f-9daa-c9f31eb2daf8",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 769, DateTimeKind.Utc).AddTicks(8768),
                            UserName = "user31@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("c55cdfd0-d1dd-4841-ae27-f2d621686756"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a48a55eb-3c07-44ac-9a78-c33106df23b4",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 898, DateTimeKind.Utc).AddTicks(1527),
                            Email = "user32@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 32",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER32@GMAIL.COM",
                            NormalizedUserName = "USER32@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDhlEmfJD5dfz6g7tz9m83L5gh2KBfWqjMidw7u1cLR7t3UQE539MHOjtxa+g+cyYA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "d3d776fb-03c6-404a-925a-475110a0c73d",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 898, DateTimeKind.Utc).AddTicks(1529),
                            UserName = "user32@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("f483fb9f-477c-4a3a-9f73-3b028b06ed49"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "da61ccdf-68e4-4451-a5ad-c296b041178e",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 996, DateTimeKind.Utc).AddTicks(5266),
                            Email = "user33@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 33",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER33@GMAIL.COM",
                            NormalizedUserName = "USER33@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEP2Ssk8LUyXhBZ4QPTPWCP4h2eAIqWHvxMITMRNqEtE6qkvx7mtZ01R1hfSpTk6crA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "3f615cef-79d1-4ba4-9830-0dcfae7c674d",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 12, 996, DateTimeKind.Utc).AddTicks(5271),
                            UserName = "user33@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("87787f6e-729b-436b-bcc9-c7b48c45ba05"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8e119894-ed73-46f9-9b8e-1020f40142b0",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 85, DateTimeKind.Utc).AddTicks(8428),
                            Email = "user34@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 34",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER34@GMAIL.COM",
                            NormalizedUserName = "USER34@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPEECBy1Z2ydrS7kxmH9YMN/JkaeQXll3ZbSgVEMNpancuqgkg2dh3te/xUTzEr8cw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "eab92b85-2f87-4ab9-803a-18fc18cbc482",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 85, DateTimeKind.Utc).AddTicks(8430),
                            UserName = "user34@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("d30fa796-5144-4467-a302-68dc64fd0d92"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20f320cd-9b37-4743-8eb5-97d4f3574f0e",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 179, DateTimeKind.Utc).AddTicks(2325),
                            Email = "user35@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 35",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER35@GMAIL.COM",
                            NormalizedUserName = "USER35@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFXsVDO6Gm4mZnQTl1MnE8lMjugGxi9OFOAkbG4kMJiYxSj9mAEhscndgVs4lDV42w==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "f1164b51-f5e6-4976-8a7f-f9aee8445af9",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 179, DateTimeKind.Utc).AddTicks(2327),
                            UserName = "user35@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("91d0da1b-e147-4829-aa4e-7073c1a10d2c"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c6c76393-8708-402b-9e78-647842f87bf5",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 269, DateTimeKind.Utc).AddTicks(4379),
                            Email = "user36@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 36",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER36@GMAIL.COM",
                            NormalizedUserName = "USER36@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOEdXCg2c7x1Wi9eqIqfFNt36o2RMdkL5Sx17RFtNFGENLX4+pApdX1f0XFaXh7b2w==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "75f41eb4-422b-4292-954c-1dac48efe975",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 269, DateTimeKind.Utc).AddTicks(4381),
                            UserName = "user36@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("fbd62259-a313-4d38-885e-1f6acdf9a30a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ea7bf64-a7e7-4df8-b617-8259154bf8b0",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 412, DateTimeKind.Utc).AddTicks(8405),
                            Email = "user37@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 37",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER37@GMAIL.COM",
                            NormalizedUserName = "USER37@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBj+yrdztzY8gkb8dku0YtCJfOLOPEhuJc5Wiqaf9YVgu1FNxLeVS+E1CM/n8xd8Nw==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "98241317-daaf-4514-b5b4-ae073b658b3d",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 412, DateTimeKind.Utc).AddTicks(8411),
                            UserName = "user37@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("9b8c6d7b-754f-420c-b574-4a63326bfc6a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a8a63f84-62af-4e1f-9f5d-82603102841c",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 569, DateTimeKind.Utc).AddTicks(9888),
                            Email = "user38@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 38",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER38@GMAIL.COM",
                            NormalizedUserName = "USER38@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOiSM5yfYqs/grXyt5HqwllpIdCmB7rP4hdbBfCAXbfpmM2PgtWM7dbw/UQmiCzwww==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "7a389417-99ef-4354-a7f9-a38e58a69307",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 569, DateTimeKind.Utc).AddTicks(9890),
                            UserName = "user38@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("6e2f7a2d-1994-419b-8c6d-b3d297cd7b06"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c65d63e4-f489-4473-8c45-b64ebc2eafa9",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 671, DateTimeKind.Utc).AddTicks(6085),
                            Email = "user39@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 39",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER39@GMAIL.COM",
                            NormalizedUserName = "USER39@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELh9SIX5SDouzmYDFhIFIdHle9nqSmXN2q+qp0jizE4g2uLvgTC1p04Et79MMtNsEQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "581ef41d-c8cf-4b6f-bc15-46f6b627e165",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 671, DateTimeKind.Utc).AddTicks(6087),
                            UserName = "user39@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("853988db-ad55-4a28-9782-90438c64b62d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8cd29fc7-6310-4633-8016-ae9674acc6cd",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 769, DateTimeKind.Utc).AddTicks(9734),
                            Email = "user40@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 40",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER40@GMAIL.COM",
                            NormalizedUserName = "USER40@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIkMe8MGqK3KkM43aYcPWSMW4fuUNV/QhvGEkZhR678qyvJLhk3Erym2OrAAasypaA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "01fed7bf-8af7-470f-862c-eaffb112598e",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 769, DateTimeKind.Utc).AddTicks(9737),
                            UserName = "user40@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("60a119e1-610c-42fc-85c8-95a7e4d2119b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "975da4dd-5f96-42f8-b784-c76ce1593536",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 864, DateTimeKind.Utc).AddTicks(6354),
                            Email = "user41@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 41",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER41@GMAIL.COM",
                            NormalizedUserName = "USER41@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIjFGdWpKD2aqgdbcWuLv88hXAx8DgtHr6vnkncQTD90H3hKo0vfjO2XIkOcWGlJRA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "0d0f5e58-a02c-4c55-b8e1-676aedddc6b9",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 864, DateTimeKind.Utc).AddTicks(6356),
                            UserName = "user41@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("870559eb-5fde-4764-ade7-392b0cf6b5ce"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "174f8015-cda9-4a16-9d90-3a9630c8ef00",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 968, DateTimeKind.Utc).AddTicks(639),
                            Email = "user42@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 42",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER42@GMAIL.COM",
                            NormalizedUserName = "USER42@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFAFPZGCAj19Nb1rCRSmPnU8uH6atYwd4yx0J+MwsNUzInUKgXm5KSLc/74j5QdwsQ==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "06a5424e-f3bd-4b38-8d78-46d28fa284a4",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 13, 968, DateTimeKind.Utc).AddTicks(641),
                            UserName = "user42@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("296dbab2-62f2-4eb6-ae53-e4c7fffdaf34"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dcef58c7-24f9-4105-845b-fd4ee12aa04b",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 64, DateTimeKind.Utc).AddTicks(5461),
                            Email = "user43@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 43",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER43@GMAIL.COM",
                            NormalizedUserName = "USER43@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEK2N+KjV8OMMYFZVYRkLnrbLwXk4YbvmE6R1qRKlw+sLEUyfMu0bAxQJ3m1UQ/q78g==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "3ea4e9c9-14d2-4661-8ec1-3d00ced9b782",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 64, DateTimeKind.Utc).AddTicks(5463),
                            UserName = "user43@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("b2687ce8-aad5-4d5f-849b-dcd2b402aff0"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "866506a9-1948-47a0-8064-284cf69c69fc",
                            CreatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 158, DateTimeKind.Utc).AddTicks(8361),
                            Email = "user44@gmail.com",
                            EmailConfirmed = false,
                            FullName = "User 44",
                            Gender = 2,
                            IsDelete = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "USER44@GMAIL.COM",
                            NormalizedUserName = "USER44@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEE87i28BDcGYsk1Id8lq0vKVSMCSxPGwkf/hvlUMLteyiXuALp5RnSNLH4WJ7UrDhA==",
                            PhoneNumberConfirmed = false,
                            PictureUrl = "https://avatarfiles.alphacoders.com/151/thumb-151233.jpg",
                            SecurityStamp = "6d7bc417-2d00-4e07-9e77-821402882cd7",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UpdatedDateTime = new DateTime(2024, 5, 27, 9, 3, 14, 158, DateTimeKind.Utc).AddTicks(8363),
                            UserName = "user44@gmail.com"
                        });
                });

            modelBuilder.Entity("AppUserIdentityRole<Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("IdentityRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Address", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.CartItem", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shoppy.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Order", b =>
                {
                    b.HasOne("Shoppy.Persistence.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shoppy.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Product", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.ProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductRating", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.OrderItem", "OrderItem")
                        .WithOne("ProductRating")
                        .HasForeignKey("Shoppy.Domain.Entities.ProductRating", "OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.RatingResource", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.ProductRating", "Rating")
                        .WithMany("RatingResources")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("Shoppy.Persistence.Identity.AppUser", b =>
                {
                    b.HasOne("Shoppy.Domain.Entities.Cart", "Cart")
                        .WithOne()
                        .HasForeignKey("Shoppy.Persistence.Identity.AppUser", "CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.OrderItem", b =>
                {
                    b.Navigation("ProductRating");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Shoppy.Domain.Entities.ProductRating", b =>
                {
                    b.Navigation("RatingResources");
                });
#pragma warning restore 612, 618
        }
    }
}
